{
  "compilerOptions": {
    "noEmit": true,
    "checkJs": true,
    "resolveJsonModule": true,
    "moduleResolution": "node",
    "target": "esnext",
    "module": "esnext",
    "lib": ["esnext"],
    "types": ["ava"],

    // Tells TypeScript to read JS files, as
    // normally they are ignored as source files
    "allowJs": true,

    // go to js file when using IDE functions like
    // "Go to Definition" in VSCode
    "declarationMap": true,

    // Strict Checks
    "alwaysStrict": true, // Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file.
    "allowUnreachableCode": false, // pick up dead code paths
    "noImplicitAny": true, // In some cases where no type annotations are present, TypeScript will fall back to a type of any for a variable when it cannot infer the type.
    "strictNullChecks": true, // When strictNullChecks is true, null and undefined have their own distinct types and you’ll get a type error if you try to use them where a concrete value is expected.

    // Linter Checks
    "noImplicitReturns": true,
    "noUncheckedIndexedAccess": true, // accessing index must always check for undefined
    "noUnusedLocals": true, // Report errors on unused local variables.
    "noUnusedParameters": true // Report errors on unused parameters in functions
  },
  "include": ["src/**/*", "tests/**/*"]
}
